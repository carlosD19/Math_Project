/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathproject;

import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import static jdk.nashorn.internal.objects.NativeNumber.NaN;
import jdk.nashorn.internal.objects.NativeString;

/**
 *
 * @author pc
 */
public class View extends javax.swing.JFrame {

    String a = "";
    String b = "";
    String c = "";
    double valorA = 0;
    double valorB = 0;
    double valorC = 0;
    double v1 = 0;
    double v2 = 0;
    int concavidad = 0;
    DecimalFormat formato = new DecimalFormat("0.0");

    public View() {
        initComponents();
        remove_backGround();
        jButton4.setEnabled(false);
        textVisibleF();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        valorALabel = new javax.swing.JLabel();
        valorBLabel = new javax.swing.JLabel();
        valorCLabel = new javax.swing.JLabel();
        concavidadLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        x2Label = new javax.swing.JLabel();
        x1Label = new javax.swing.JLabel();
        corteY = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        corteX = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        vertice = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        decrece = new javax.swing.JLabel();
        crece = new javax.swing.JLabel();
        ambito = new javax.swing.JLabel();
        puntoMoM = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        simetria = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/close (2).png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, 50, 40));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ecuación Cuadrática.");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, -1, -1));

        jTextField1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setBorder(null);
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField1MousePressed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 330, 50));

        jButton2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton2.setText("Enter");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 300, -1, -1));

        jButton3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton3.setText("χ²");
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 240, -1, -1));

        jButton4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton4.setText("X");
        jButton4.setFocusable(false);
        jButton4.setPreferredSize(new java.awt.Dimension(53, 37));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 240, 50, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel3.setText("aχ² + bX + c");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Valor de A:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Valor de B:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Valor de C:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 520, -1, -1));

        valorALabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        valorALabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(valorALabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 230, 40));

        valorBLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        valorBLabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(valorBLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, 220, 40));

        valorCLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        valorCLabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(valorCLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 520, 260, 40));

        concavidadLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        concavidadLabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(concavidadLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 470, 40));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("X1:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 620, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("X2:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 670, -1, -1));

        x2Label.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        x2Label.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(x2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 670, 130, 40));

        x1Label.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        x1Label.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(x1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 620, 120, 40));

        corteY.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        corteY.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(corteY, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 570, 310, 40));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Intersección en Y:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 570, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Intersección en X:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 620, -1, -1));

        corteX.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        corteX.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(corteX, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 620, 380, 40));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Vertice:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 370, -1, -1));

        vertice.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        vertice.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(vertice, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 370, 360, 40));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Decrece:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 420, -1, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Crece:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 470, -1, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Ambito:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 520, -1, -1));

        decrece.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        decrece.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(decrece, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 420, 260, 40));

        crece.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        crece.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(crece, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 470, 280, 40));

        ambito.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        ambito.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(ambito, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 520, 270, 40));

        puntoMoM.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        puntoMoM.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(puntoMoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 570, 510, 40));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Eje de Simetría:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 670, -1, -1));

        simetria.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        simetria.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(simetria, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 670, 450, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/0101.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTextField1.getText().equals("")) {
            return;
        } else {
            a = "";
            b = "";
            c = "";
            textVisibleT();
            valores();
            jButton3.setEnabled(true);
            jButton4.setEnabled(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String ecuacion = jTextField1.getText();
        jTextField1.setText(ecuacion + "χ²");
        jButton3.setEnabled(false);
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String ecuacion = jTextField1.getText();
        jTextField1.setText(ecuacion + "χ");
        jButton4.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MousePressed
        concavidadLabel.setText("");
        x1Label.setText("");
        x2Label.setText("");
        valorALabel.setText("");
        valorBLabel.setText("");
        valorCLabel.setText("");
        corteX.setText("");
        corteY.setText("");
        vertice.setText("");
        decrece.setText("");
        crece.setText("");
        ambito.setText("");
        puntoMoM.setText("");
        textVisibleF();
    }//GEN-LAST:event_jTextField1MousePressed

    public void remove_backGround() {
        jButton1.setContentAreaFilled(false);
        jButton1.setBorder(null);
        setIconImage(new ImageIcon(getClass().getResource("../icons/icono.png")).getImage());
    }

    public void valores() {
        String str = jTextField1.getText();
        boolean busA = true;
        boolean busB = false;
        for (int n = 0; n < str.length(); n++) {
            char c1 = str.charAt(n);
            if (busA) {
                if (String.valueOf(c1).equals("χ")) {
                    busA = false;
                    busB = true;
                    n += 2;
                    c1 = str.charAt(n);
                } else {
                    a += c1;
                }
            }
            if (busB) {
                if (String.valueOf(c1).equals("χ")) {
                    busB = false;
                    n += 1;
                    c1 = str.charAt(n);
                } else {
                    b += c1;
                }
            }

            if (busA == false & busB == false) {
                c += c1;
            }
        }
        imprimirValores();
    }

    public void imprimirValores() {
        valorALabel.setText(a);
//        System.out.println("Valor de A: " + a);

        if (String.valueOf(b.charAt(0)).equals("+")) {
            String valorB = "";
            for (int i = 1; i < b.length(); i++) {
                char c1 = b.charAt(i);
                valorB += c1;
            }
            b = valorB;
            valorBLabel.setText(b);
//            System.out.println("Valor de C: " + b);
        } else {
            valorBLabel.setText(b);
//            System.out.println("Valor de C: " + b);
        }

        if (String.valueOf(c.charAt(0)).equals("+")) {
            String valorC = "";
            for (int i = 1; i < c.length(); i++) {
                char c1 = c.charAt(i);
                valorC += c1;
            }
            c = valorC;
            valorCLabel.setText(c);
//            System.out.println("Valor de C: " + c);
        } else {
            valorCLabel.setText(c);
//            System.out.println("Valor de C: " + c);
        }
        concavidad();
        convertirValores();
        corteY();
        vertice();
        DecreCrece();
        x1x2();
    }

    public void x1x2() {

        double x1 = 0, x2 = 0;
        double a1 = valorA;
        double b1 = valorB;
        double c1 = valorC;

        if (String.valueOf(a.charAt(0)).equals("-")) {
            a1 = valorA * -1;
            b1 = valorB * -1;
            c1 = valorC * -1;

        }

        x1 = ((-b1) + Math.sqrt((b1 * b1) - (4 * a1 * c1))) / (2 * a1);
        x2 = ((-b1) - Math.sqrt((b1 * b1) - (4 * a1 * c1))) / (2 * a1);

        if (Double.isNaN(x1) & Double.isNaN(x2)) {
            corteX.setText("( " + "i" + " , 0 )" + " ( " + "i" + " , 0 )");
            x1Label.setText(" i");
            x2Label.setText(" i");
        } else {
            x1Label.setText(String.valueOf(formato.format(x1)));
            x2Label.setText(String.valueOf(formato.format(x2)));
            corteX.setText("( " + formato.format(x1) + " , 0 )" + " ( " + formato.format(x2) + " , 0 )");
        }

    }

    public void concavidad() {
        double valorA1 = 0;
        String num1 = "";
        String num2 = "";
        String numA = "";
        for (int i = 0; i < a.length(); i++) {
            boolean bus1 = false;

            char a1 = a.charAt(i);
            if (String.valueOf(a1).equals("/")) {
                i++;
                a1 = a.charAt(i);
                bus1 = true;
            } else {
                num1 += a1;
                numA += a1;
            }
            if (bus1) {
                num2 += a1;
            }
        }
        if (num2.equals("")) {
            valorA1 = Double.parseDouble(numA);
        } else {
            valorA1 = (Double.parseDouble(num1) / Double.parseDouble(num2));
        }
        if (valorA1 > 0) {
//            System.out.println("Concava hacia arriba.");
            concavidadLabel.setText("Concava hacia Arriba.");
            concavidad = 1;
        } else {
//            System.out.println("Concava hacia abajo.");
            concavidadLabel.setText("Concava hacia Abajo.");
            concavidad = 2;
        }

    }

    public void convertirValores() {

        String num1a = "";
        String num2a = "";
        String numA = "";
        String num1b = "";
        String num2b = "";
        String numB = "";
        String num1c = "";
        String num2c = "";
        String numC = "";

        //Convertir A
        for (int i = 0; i < a.length(); i++) {
            boolean bus1 = false;

            char a1 = a.charAt(i);
            if (String.valueOf(a1).equals("/")) {
                i++;
                a1 = a.charAt(i);
                bus1 = true;
            } else {
                num1a += a1;
                numA += a1;
            }
            if (bus1) {
                num2a += a1;
            }
        }
        if (num2a.equals("")) {
            valorA = Double.parseDouble(numA);
        } else {
            valorA = (Double.parseDouble(num1a) / Double.parseDouble(num2a));
        }
        //Convertir B
        for (int i = 0; i < b.length(); i++) {
            boolean bus1 = false;

            char b1 = b.charAt(i);
            if (String.valueOf(b1).equals("/")) {
                i++;
                b1 = b.charAt(i);
                bus1 = true;
            } else {
                num1b += b1;
                numB += b1;
            }
            if (bus1) {
                num2b += b1;
            }
        }
        if (num2b.equals("")) {
            valorB = Double.parseDouble(numB);
        } else {
            valorB = (Double.parseDouble(num1b) / Double.parseDouble(num2b));
        }

        for (int i = 0; i < c.length(); i++) {
            boolean bus1 = false;

            char c1 = c.charAt(i);
            if (String.valueOf(c1).equals("/")) {
                i++;
                c1 = c.charAt(i);
                bus1 = true;
            } else {
                num1c += c1;
                numC += c1;
            }
            if (bus1) {
                num2c += c1;
            }
        }
        if (num2c.equals("")) {
            valorC = Double.parseDouble(numC);
        } else {
            valorC = (Double.parseDouble(num1c) / Double.parseDouble(num2c));
        }
    }

    public void corteY() {
        int c1 = (int) valorC;
        corteY.setText("( 0 , " + c1 + " )");
    }

    public void vertice() {
        v1 = (-valorB) / (2 * valorA);
        v2 = valorA * (v1 * v1) + valorB * v1 + valorC;
        vertice.setText("( " + formato.format(v1) + " , " + formato.format(v2) + " )");
        if (concavidad == 1) {
            puntoMoM.setText("Punto Minimo: " + "( " + formato.format(v1) + " , " + formato.format(v2) + " )");
            simetria.setText("C ( "+v1 +" , +∞ )" +" D ( -∞ , " + v1 + " )");
        } else {
            puntoMoM.setText("Punto Maximo: " + "( " + formato.format(v1) + " , " + formato.format(v2) + " )");
            simetria.setText("C ( -∞ , " + v1 + " )" + " D ( "+v1 +" , +∞ )");
        }
        
    }

    public void DecreCrece() {
        if (concavidad == 1) {
            decrece.setText("] -∞ , " + formato.format(v1) + " [");
            crece.setText("] " + formato.format(v1) + " , +∞ [");
            ambito.setText("[ " + formato.format(v2) + " , +∞ [");
        } else {
            decrece.setText("] " + formato.format(v1) + " , +∞ [");
            crece.setText("] -∞ , " + formato.format(v1) + " [");
            ambito.setText("] -∞ , " + formato.format(v2) + " ]");
        }
    }
    public void textVisibleF(){
        jLabel10.setVisible(false);
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
        jLabel14.setVisible(false);
        jLabel9.setVisible(false);
        jLabel7.setVisible(false);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jLabel8.setVisible(false);
        jLabel15.setVisible(false);
        simetria.setVisible(false);
    }
    public void textVisibleT(){
        jLabel10.setVisible(true);
        jLabel11.setVisible(true);
        jLabel12.setVisible(true);
        jLabel13.setVisible(true);
        jLabel14.setVisible(true);
        jLabel9.setVisible(true);
        jLabel7.setVisible(true);
        jLabel4.setVisible(true);
        jLabel5.setVisible(true);
        jLabel6.setVisible(true);
        jLabel8.setVisible(true);
        jLabel15.setVisible(true);
        simetria.setVisible(true);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ambito;
    private javax.swing.JLabel concavidadLabel;
    private javax.swing.JLabel corteX;
    private javax.swing.JLabel corteY;
    private javax.swing.JLabel crece;
    private javax.swing.JLabel decrece;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel puntoMoM;
    private javax.swing.JLabel simetria;
    private javax.swing.JLabel valorALabel;
    private javax.swing.JLabel valorBLabel;
    private javax.swing.JLabel valorCLabel;
    private javax.swing.JLabel vertice;
    private javax.swing.JLabel x1Label;
    private javax.swing.JLabel x2Label;
    // End of variables declaration//GEN-END:variables
}
